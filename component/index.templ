package component

import (
	"github.com/dextryz/tenet"
)

templ Index() {
    <!doctype html>
    <html>

        <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="stylesheet" href="/static/style.css" type="text/css"/>
            <script src="https://unpkg.com/htmx.org@1.9.2"></script>
        </head>

        <body hx-boost="true">

            <main>
                <form class="search-container"
                    hx-get="/list"
                    hx-target="#cards"
                    hx-swap="outerHTML">

                    <input class="search-bar" name="search" type="search" placeholder="Paste naddr or npub and Enter"/>
                </form>

                <div id="cards"></div>

                <footer>
                    <p>Made with <i class="fas fa-heart"></i> by <a href="https://github.com/dextryz">dextryz</a></p>
                </footer>
            </main>

        </body>
    </html>
}

templ ArticleCard(articles []*tenet.Article) {

    <article class="article-cards">
	for _, a := range articles {

        <article class="article-card-container">

            <div class="article-card-body">

                <header class="article-card-header"
                    hx-get={ a.Naddr }
                    hx-push-url="true"
                    hx-target="body"
                    hx-swap="outerHTML">
                    { a.Title }
                </header>

                <div class="tags">
                    for _, v := range a.Tags {
                        <h2 class="tag"
                            hx-get="hashtag/{ v }"
                            hx-push-url="true"
                            hx-target="body"
                            hx-swap="outerHTML">
                            { v }
                        </h2>
                    }
                </div>

                <hr class="custom-divider"/>

                <b class="card-header"
                    hx-get="/highlights"
                    hx-push-url="true"
                    hx-target="main"
                    hx-swap="outerHTML">

                    View Highlights
                </b>

            </div>

        </article>
	}
    </article>
}

templ HighlightCard(h tenet.Highlight, p tenet.Profile, a tenet.Article, articleUrl, highlightUrl string) {

    <div class="card-highlights">
        <div class="card-container">

            <section class="card-profile">
                <img src={ p.Picture } />
                <div>
                    <b class="author-name">{ p.Name }</b>
                    <time datetime> { h.CreatedAt } </time>
                </div>
            </section>

            <div class="card-body">

                <section class="card-section"
                    hx-get={ highlightUrl }
                    hx-push-url="true"
                    hx-target="main"
                    hx-swap="outerHTML">

                    { h.Content }
                </section>

            </div>

            <hr class="custom-divider"/>

            <b class="card-header"
                hx-get={ articleUrl }
                hx-push-url="true"
                hx-target="main"
                hx-swap="outerHTML">

                { a.Title }
            </b>

        </div>
    </div>
}

templ Article(a tenet.Article, content string) {

        <article class="article">

            <h2>
                { a.Title }
            </h2>

            <div class="tags">
                for _, tag := range a.Tags {
                    <a class="tag" href="/tags/coding">{ tag }</a>
                }
            </div>

            <hr class="custom-divider"/>

            <section id="#content" class="content">
                @templ.Raw(content)
            </section>

        </article>
}

templ Highlight(h tenet.Highlight) {

    <div class="article-container">

        <article class="article">

            <h1 class="content">Content</h1>

            <section id="#content" class="content">
                { h.Content }
            </section>

            if h.Context != "" {
                <h3>Context</h3>
                <section>
                    { h.Context }
                </section>
            }

        </article>
    </div>
}
